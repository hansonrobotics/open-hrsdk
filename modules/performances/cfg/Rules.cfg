#!/usr/bin/env python

##
## Copyright (C) 2017-2025 Hanson Robotics
##
## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <https://www.gnu.org/licenses/>.
##

PACKAGE = 'performances'

from dynamic_reconfigure.parameter_generator_catkin import *
import yaml_config

gen = ParameterGenerator()
# Tracking parameters
gen.add("interactive", bool_t, 0, "Only in interactive mode", True)
gen.add("enable", bool_t, 0, "Enable keyword rules", True)
gen.add("automated_arm_gestures", bool_t, 0, "Automated arm gestures", False)
gen.add("automated_shoulder_gestures", bool_t, 0, "Automated shoulder gestures", False)
gen.add("min_arms_hold_time", double_t, 0, "Min hold time for arm animations", 3,0,6)
gen.add("max_arms_hold_time", double_t, 0, "Max hold time for arm animations", 5,0,6)
gen.add("global_probability", double_t, 0, "Adjust all probabilities (-1 no rules applied, 1 all rules, 0 Unchanged)", 0,-1,1)
# Add more positive gestures
gen.add("generic_gestures", bool_t, 0, "Generic gestures", False)
gen.add("generic_gestures_categories_excluded", str_t, 0, "Do not use these categories as generic gestures","")
gen.add("generic_gestures_probability", double_t, 0, "Probability for each word to get gestures",0.1,0.01,1.0)
gen.add("generic_gestures_head_filter", double_t, 0, "Generic head movement animation filter",0.9,0.0,1.0)
gen.add("generic_gestures_brow_filter", double_t, 0, "Generic brow movement animation filter",0.6,0.0,1.0)
gen.add("generic_gestures_eyelids_filter", double_t, 0, "Generic eyelids movement animation filter",0.3,0.0,1.0)
gen.add("generic_gestures_eyes_filter", double_t, 0, "Generic eyes movement animation filter",0.3,0.0,1.0)
gen.add("generic_gestures_arms_filter", double_t, 0, "Generic arms movement animation filter",0.9,0.0,1.0)
gen.add("generic_gestures_happy_filter", double_t, 0, "Add some happy animations (0- none, 1 - every 2 words)",0.5,0.0,1.0)
# Filters animations (can remove the head)
gen.add("rules_head_filter", double_t, 0, "Head movement filter",1.0,0.0,1.0)
gen.add("rules_brow_filter", double_t, 0, "Brow movement filter",1.0,0.0,1.0)
gen.add("rules_eyelids_filter", double_t, 0, "Eyelid movement filter",1.0,0.0,1.0)
gen.add("rules_eyes_filter", double_t, 0, "Eyes movement filter",1.0,0.0,1.0)
gen.add("reduce_negativity", double_t, 0, "Reduce negativite categories of animations", 0.0, 0.0, 1.0)
gen.add("negative_gesture_categories", str_t, 0, "Remove brows down, head shakes", "shake-short, shake-long, shake-firmly, brows-down, brows-doubt") 

#gen.add("other_rules", str_t, 0, "other_rules", '[]')
# UI schema for gestures and expressions
gen.add("da_rules", str_t, 0, "Dialog Act Rules", '[]')
gen.add("keyword_rules", str_t, 0, "Keyword based Rules", '[]')
gen.add("node_schema", str_t, 0, '', yaml_config.parse('rules_schema') or '{}')
# package name, node name, config name
exit(gen.generate(PACKAGE, "rules", "Rules"))
